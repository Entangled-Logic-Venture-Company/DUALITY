import "HV3DFramework.idl";

namespace HV3DDUALITY.HV3DTensors {

	struct HV3DRenderingEngine {
		HV3DDUALITY.HV3DName					HV3DTag;
		HV3DDUALITY.HV3DDate					HV3DModified;
		HV3DDUALITY.HV3DVersion					HV3DRelease;
		HV3DDUALITY.HV3DActivationFactory		HV3DEngine;
	};

	struct HV3DResolution {
		Int32 x;
		Int32 y;
	};

	struct HV3DAA {
		String s;
	};

	struct HV3DMultiSampling {
		String s;
	};

	struct HV3DSuperSampling {
		Boolean b;
	};

	struct HV3DFilterMode {
		String s;
	};

	struct HV3DPixelFilter {
		HV3DFilterMode		m;
		Int32				x;
		Int32				y;
		Boolean				b;
	};

	struct HV3DGamma {
		Single s;
	};

	struct HV3DNearPlane {
		Single f;
	};

	struct HV3DFarPlane {
		Single f;
	};

	struct HV3DObject {
		String name;
		UInt32 num_vertices;
		UInt32 num_textcoords;
		UInt32 num_normalvectors;
		UInt32 num_faces;
	};

	struct HV3DVertexCoord {
		Single x;
		Single y;
		Single z;
	};

	struct HV3DTextCoord {
		Single u;
		Single v;
	};

	struct HV3DVertexNormal {
		Single a;
		Single b;
		Single c;
	};

	struct HV3DVertex {
		HV3DVertexCoord vcoord;
		HV3DTextCoord tcoord;
		HV3DVertexNormal normal;
	};

	struct HV3DTriangle {
		HV3DVertex vert1;
		HV3DVertex vert2;
		HV3DVertex vert3;
	};

	[uuid(895F1DCD-D1D0-414E-BBFA-31D0A298B29D)]
	[version(0x10000001)]
	interface IHV3DCoordinateSpace : IInspectable
	{
		void HV3DWriteCluster();

	};

	[uuid(4C1D5F78-2464-4198-A978-3683434838BD)]
	[version(0x10000001)]
	interface IHV3DPipeline : IInspectable
	{
		void HV3DOnInit(Object panel);

		void HV3DOnUpdate();
		
		void HV3DOnRender();
		
		void HV3DOnDestroy();

	};

	[uuid(E5474E91-812D-4932-BA00-096B099CC92A)]
	[version(0x10000001)]
	interface IHV3DCoordinateSpaceView : IInspectable
	{
		void HV3DGrabCoordinateSpaceView();

	};

}
